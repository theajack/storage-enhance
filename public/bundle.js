/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./test/test-web.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/easy-test-lib/easy-test-lib.min.js":
/*!*********************************************************!*\
  !*** ./node_modules/easy-test-lib/easy-test-lib.min.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function (e, t) {\n   true ? module.exports = t() : undefined;\n}(this, function () {\n  return function (e) {\n    var t = {};\n\n    function n(r) {\n      if (t[r]) return t[r].exports;\n      var o = t[r] = {\n        i: r,\n        l: !1,\n        exports: {}\n      };\n      return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\n    }\n\n    return n.m = e, n.c = t, n.d = function (e, t, r) {\n      n.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: r\n      });\n    }, n.r = function (e) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    }, n.t = function (e, t) {\n      if (1 & t && (e = n(e)), 8 & t) return e;\n      if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n      var r = Object.create(null);\n      if (n.r(r), Object.defineProperty(r, \"default\", {\n        enumerable: !0,\n        value: e\n      }), 2 & t && \"string\" != typeof e) for (var o in e) n.d(r, o, function (t) {\n        return e[t];\n      }.bind(null, o));\n      return r;\n    }, n.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return n.d(t, \"a\", t), t;\n    }, n.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, n.p = \"\", n(n.s = 0);\n  }([function (e, t, n) {\n    \"use strict\";\n\n    n.r(t), n.d(t, \"startTest\", function () {\n      return b;\n    }), n.d(t, \"isValueEqual\", function () {\n      return r;\n    }), n.d(t, \"defaultPlugin\", function () {\n      return h;\n    }), n.d(t, \"asyncPlugin\", function () {\n      return g;\n    });\n\n    var r = function (e, t) {\n      return typeof e == typeof t && (\"object\" == typeof e ? o(e, t) : e === t);\n    };\n\n    function o(e, t) {\n      return u(e, t) && u(t, e);\n    }\n\n    function u(e, t) {\n      if (e instanceof Array) {\n        for (var n = 0; n < e.length; n++) if (!i(e[n], t[n])) return !1;\n      } else for (var r in e) if (!i(e[r], t[r])) return !1;\n\n      return !0;\n    }\n\n    function i(e, t) {\n      var n = !0;\n      return typeof e != typeof t ? n = !1 : \"object\" == typeof e ? o(e, t) || (n = !1) : e !== t && (n = !1), n;\n    }\n\n    function a(e) {\n      return new Date().getTime() - e;\n    }\n\n    var c = function (e, t) {\n      var n = e.test,\n          o = e.expect,\n          u = e.args,\n          i = n.call({\n        test: n,\n        expect: o,\n        args: u\n      }, t, u);\n      return {\n        result: i,\n        expect: o,\n        passed: r(i, o)\n      };\n    },\n        l = function (e, t, n, r) {\n      return new (n || (n = Promise))(function (o, u) {\n        function i(e) {\n          try {\n            c(r.next(e));\n          } catch (e) {\n            u(e);\n          }\n        }\n\n        function a(e) {\n          try {\n            c(r.throw(e));\n          } catch (e) {\n            u(e);\n          }\n        }\n\n        function c(e) {\n          var t;\n          e.done ? o(e.value) : (t = e.value, t instanceof n ? t : new n(function (e) {\n            e(t);\n          })).then(i, a);\n        }\n\n        c((r = r.apply(e, t || [])).next());\n      });\n    },\n        f = function (e, t) {\n      var n,\n          r,\n          o,\n          u,\n          i = {\n        label: 0,\n        sent: function () {\n          if (1 & o[0]) throw o[1];\n          return o[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return u = {\n        next: a(0),\n        throw: a(1),\n        return: a(2)\n      }, \"function\" == typeof Symbol && (u[Symbol.iterator] = function () {\n        return this;\n      }), u;\n\n      function a(u) {\n        return function (a) {\n          return function (u) {\n            if (n) throw new TypeError(\"Generator is already executing.\");\n\n            for (; i;) try {\n              if (n = 1, r && (o = 2 & u[0] ? r.return : u[0] ? r.throw || ((o = r.return) && o.call(r), 0) : r.next) && !(o = o.call(r, u[1])).done) return o;\n\n              switch (r = 0, o && (u = [2 & u[0], o.value]), u[0]) {\n                case 0:\n                case 1:\n                  o = u;\n                  break;\n\n                case 4:\n                  return i.label++, {\n                    value: u[1],\n                    done: !1\n                  };\n\n                case 5:\n                  i.label++, r = u[1], u = [0];\n                  continue;\n\n                case 7:\n                  u = i.ops.pop(), i.trys.pop();\n                  continue;\n\n                default:\n                  if (!(o = i.trys, (o = o.length > 0 && o[o.length - 1]) || 6 !== u[0] && 2 !== u[0])) {\n                    i = 0;\n                    continue;\n                  }\n\n                  if (3 === u[0] && (!o || u[1] > o[0] && u[1] < o[3])) {\n                    i.label = u[1];\n                    break;\n                  }\n\n                  if (6 === u[0] && i.label < o[1]) {\n                    i.label = o[1], o = u;\n                    break;\n                  }\n\n                  if (o && i.label < o[2]) {\n                    i.label = o[2], i.ops.push(u);\n                    break;\n                  }\n\n                  o[2] && i.ops.pop(), i.trys.pop();\n                  continue;\n              }\n\n              u = t.call(e, i);\n            } catch (e) {\n              u = [6, e], r = 0;\n            } finally {\n              n = o = 0;\n            }\n\n            if (5 & u[0]) throw u[1];\n            return {\n              value: u[0] ? u[1] : void 0,\n              done: !0\n            };\n          }([u, a]);\n        };\n      }\n    },\n        s = function (e, t) {\n      var n = e.test,\n          o = e.expect,\n          u = e.args;\n      return l(void 0, void 0, void 0, function () {\n        var e;\n        return f(this, function (i) {\n          switch (i.label) {\n            case 0:\n              return [4, n.call({\n                test: n,\n                expect: o,\n                args: u\n              }, t, u)];\n\n            case 1:\n              return [2, {\n                result: e = i.sent(),\n                expect: o,\n                passed: r(e, o)\n              }];\n          }\n        });\n      });\n    };\n\n    var p = function () {\n      return (p = Object.assign || function (e) {\n        for (var t, n = 1, r = arguments.length; n < r; n++) for (var o in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);\n\n        return e;\n      }).apply(this, arguments);\n    },\n        y = function (e, t, n, r) {\n      return new (n || (n = Promise))(function (o, u) {\n        function i(e) {\n          try {\n            c(r.next(e));\n          } catch (e) {\n            u(e);\n          }\n        }\n\n        function a(e) {\n          try {\n            c(r.throw(e));\n          } catch (e) {\n            u(e);\n          }\n        }\n\n        function c(e) {\n          var t;\n          e.done ? o(e.value) : (t = e.value, t instanceof n ? t : new n(function (e) {\n            e(t);\n          })).then(i, a);\n        }\n\n        c((r = r.apply(e, t || [])).next());\n      });\n    },\n        d = function (e, t) {\n      var n,\n          r,\n          o,\n          u,\n          i = {\n        label: 0,\n        sent: function () {\n          if (1 & o[0]) throw o[1];\n          return o[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return u = {\n        next: a(0),\n        throw: a(1),\n        return: a(2)\n      }, \"function\" == typeof Symbol && (u[Symbol.iterator] = function () {\n        return this;\n      }), u;\n\n      function a(u) {\n        return function (a) {\n          return function (u) {\n            if (n) throw new TypeError(\"Generator is already executing.\");\n\n            for (; i;) try {\n              if (n = 1, r && (o = 2 & u[0] ? r.return : u[0] ? r.throw || ((o = r.return) && o.call(r), 0) : r.next) && !(o = o.call(r, u[1])).done) return o;\n\n              switch (r = 0, o && (u = [2 & u[0], o.value]), u[0]) {\n                case 0:\n                case 1:\n                  o = u;\n                  break;\n\n                case 4:\n                  return i.label++, {\n                    value: u[1],\n                    done: !1\n                  };\n\n                case 5:\n                  i.label++, r = u[1], u = [0];\n                  continue;\n\n                case 7:\n                  u = i.ops.pop(), i.trys.pop();\n                  continue;\n\n                default:\n                  if (!(o = i.trys, (o = o.length > 0 && o[o.length - 1]) || 6 !== u[0] && 2 !== u[0])) {\n                    i = 0;\n                    continue;\n                  }\n\n                  if (3 === u[0] && (!o || u[1] > o[0] && u[1] < o[3])) {\n                    i.label = u[1];\n                    break;\n                  }\n\n                  if (6 === u[0] && i.label < o[1]) {\n                    i.label = o[1], o = u;\n                    break;\n                  }\n\n                  if (o && i.label < o[2]) {\n                    i.label = o[2], i.ops.push(u);\n                    break;\n                  }\n\n                  o[2] && i.ops.pop(), i.trys.pop();\n                  continue;\n              }\n\n              u = t.call(e, i);\n            } catch (e) {\n              u = [6, e], r = 0;\n            } finally {\n              n = o = 0;\n            }\n\n            if (5 & u[0]) throw u[1];\n            return {\n              value: u[0] ? u[1] : void 0,\n              done: !0\n            };\n          }([u, a]);\n        };\n      }\n    },\n        b = function (e) {\n      var t = e.cases,\n          n = e.args,\n          r = e.onTestSingle,\n          o = e.onTestComplete,\n          u = e.plugin,\n          i = function (e, t) {\n        var n = [],\n            r = !0,\n            o = new Date().getTime();\n        return function (u, i) {\n          void 0 === i && (i = !1), e && e(u), !u.passed && r && (r = !1), n[u.index] = u, i && t && t({\n            passed: r,\n            time: a(o),\n            results: n\n          });\n        };\n      }(r, o),\n          l = t.length,\n          f = 0;\n\n      t.forEach(function (e, t) {\n        return y(void 0, void 0, void 0, function () {\n          var r, o, s;\n          return d(this, function (y) {\n            switch (y.label) {\n              case 0:\n                return r = new Date().getTime(), (o = function (e, t) {\n                  if (e.plugin) return \"string\" == typeof e.plugin ? v(e.plugin) : e.plugin;\n                  if (\"string\" == typeof t) return v(t);\n                  return c;\n                }(e, u)(e, n)) instanceof Promise ? [4, o] : [3, 2];\n\n              case 1:\n                o = y.sent(), y.label = 2;\n\n              case 2:\n                return f++, s = p(p({}, o), {\n                  index: t,\n                  time: a(r)\n                }), e.name && (s.name = e.name), i(s, f === l), [2];\n            }\n          });\n        });\n      });\n    };\n\n    function v(e) {\n      return \"asyncPlugin\" === e ? s : c;\n    }\n\n    var h = c,\n        g = s;\n    t.default = {\n      startTest: b,\n      isValueEqual: r,\n      defaultPlugin: h,\n      asyncPlugin: g\n    };\n  }]).default;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/easy-test-lib/easy-test-lib.min.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function () {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function () {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2NlZDIiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIndlYnBhY2tQb2x5ZmlsbCIsImRlcHJlY2F0ZSIsInBhdGhzIiwiY2hpbGRyZW4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJsIiwiaSJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFTRCxNQUFULEVBQWlCO0FBQ2pDLE1BQUksQ0FBQ0EsTUFBTSxDQUFDRSxlQUFaLEVBQTZCO0FBQzVCRixVQUFNLENBQUNHLFNBQVAsR0FBbUIsWUFBVyxDQUFFLENBQWhDOztBQUNBSCxVQUFNLENBQUNJLEtBQVAsR0FBZSxFQUFmLENBRjRCLENBRzVCOztBQUNBLFFBQUksQ0FBQ0osTUFBTSxDQUFDSyxRQUFaLEVBQXNCTCxNQUFNLENBQUNLLFFBQVAsR0FBa0IsRUFBbEI7QUFDdEJDLFVBQU0sQ0FBQ0MsY0FBUCxDQUFzQlAsTUFBdEIsRUFBOEIsUUFBOUIsRUFBd0M7QUFDdkNRLGdCQUFVLEVBQUUsSUFEMkI7QUFFdkNDLFNBQUcsRUFBRSxZQUFXO0FBQ2YsZUFBT1QsTUFBTSxDQUFDVSxDQUFkO0FBQ0E7QUFKc0MsS0FBeEM7QUFNQUosVUFBTSxDQUFDQyxjQUFQLENBQXNCUCxNQUF0QixFQUE4QixJQUE5QixFQUFvQztBQUNuQ1EsZ0JBQVUsRUFBRSxJQUR1QjtBQUVuQ0MsU0FBRyxFQUFFLFlBQVc7QUFDZixlQUFPVCxNQUFNLENBQUNXLENBQWQ7QUFDQTtBQUprQyxLQUFwQztBQU1BWCxVQUFNLENBQUNFLGVBQVAsR0FBeUIsQ0FBekI7QUFDQTs7QUFDRCxTQUFPRixNQUFQO0FBQ0EsQ0FyQkQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL21vZHVsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obW9kdWxlKSB7XG5cdGlmICghbW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdG1vZHVsZS5kZXByZWNhdGUgPSBmdW5jdGlvbigpIHt9O1xuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxuXHRcdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ }),

/***/ "./public/node-dev.min.js":
/*!********************************!*\
  !*** ./public/node-dev.min.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n!function (t, e) {\n  \"object\" == ( false ? undefined : _typeof(exports)) && \"object\" == ( false ? undefined : _typeof(module)) ? module.exports = e() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(this, function () {\n  return function (t) {\n    var e = {};\n\n    function r(n) {\n      if (e[n]) return e[n].exports;\n      var o = e[n] = {\n        i: n,\n        l: !1,\n        exports: {}\n      };\n      return t[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports;\n    }\n\n    return r.m = t, r.c = e, r.d = function (t, e, n) {\n      r.o(t, e) || Object.defineProperty(t, e, {\n        enumerable: !0,\n        get: n\n      });\n    }, r.r = function (t) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(t, \"__esModule\", {\n        value: !0\n      });\n    }, r.t = function (t, e) {\n      if (1 & e && (t = r(t)), 8 & e) return t;\n      if (4 & e && \"object\" == _typeof(t) && t && t.__esModule) return t;\n      var n = Object.create(null);\n      if (r.r(n), Object.defineProperty(n, \"default\", {\n        enumerable: !0,\n        value: t\n      }), 2 & e && \"string\" != typeof t) for (var o in t) {\n        r.d(n, o, function (e) {\n          return t[e];\n        }.bind(null, o));\n      }\n      return n;\n    }, r.n = function (t) {\n      var e = t && t.__esModule ? function () {\n        return t.default;\n      } : function () {\n        return t;\n      };\n      return r.d(e, \"a\", e), e;\n    }, r.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }, r.p = \"\", r(r.s = 7);\n  }([function (t, e, r) {\n    \"use strict\";\n\n    r.d(e, \"f\", function () {\n      return n;\n    }), r.d(e, \"d\", function () {\n      return o;\n    }), r.d(e, \"e\", function () {\n      return a;\n    }), r.d(e, \"b\", function () {\n      return i;\n    }), r.d(e, \"g\", function () {\n      return u;\n    }), r.d(e, \"a\", function () {\n      return c;\n    }), r.d(e, \"c\", function () {\n      return f;\n    });\n    var n = \"object\" == (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) && !!window && !a(window.localStorage),\n        o = \"object\" == (typeof wx === \"undefined\" ? \"undefined\" : _typeof(wx)) && !!wx;\n\n    function a(t) {\n      return void 0 === t;\n    }\n\n    function i(t) {\n      if (null === t || \"object\" != _typeof(t)) return t;\n      var e = Array.isArray(t) ? [] : {};\n\n      for (var r in t) {\n        t.hasOwnProperty(r) && (e[r] = i(t[r]));\n      }\n\n      return e;\n    }\n\n    function u(t) {\n      try {\n        return JSON.parse(t);\n      } catch (t) {\n        return null;\n      }\n    }\n\n    function c(t) {\n      var e = t.key,\n          r = t.path;\n      return r && \"/\" !== r || (r = \"\"), r + \"/\" + encodeURIComponent(e);\n    }\n\n    function f(t) {\n      return t.map(function (t) {\n        return function (t) {\n          return t.substring(t.lastIndexOf(\"/\") + 1);\n        }(t);\n      });\n    }\n  }, function (t, e, r) {\n    \"use strict\";\n\n    r.d(e, \"a\", function () {\n      return o;\n    });\n    var n = r(0),\n        o = n.f ? \"web\" : n.d ? \"miniapp\" : \"node\";\n  }, function (t, e, r) {\n    \"use strict\";\n\n    (function (t) {\n      r.d(e, \"a\", function () {\n        return p;\n      });\n      var n = r(1),\n          o = r(3),\n          a = {},\n          i = {};\n      \"node\" === n.a && (a = r(5), i = r(6));\n      var u = \"/storage-enhance-data\",\n          c = t.env.HOME || t.env.USERPROFILE || \"/\";\n\n      if (\"node\" === n.a) {\n        var f = i.resolve(c, \".\" + u);\n        a.existsSync(f) || a.mkdirSync(f);\n      }\n\n      var p = {\n        length: function length(t) {\n          var e = (void 0 === t ? {} : t).path;\n          return this.keys({\n            path: e\n          }).length;\n        },\n        keys: function keys(t) {\n          return y(\"\", h({\n            key: \"\",\n            path: (void 0 === t ? {} : t).path\n          }), []);\n        },\n        exist: function exist(t) {\n          var e = h({\n            key: t.key,\n            path: t.path\n          });\n          return a.existsSync(e);\n        },\n        get: function get(t) {\n          return l({\n            key: t.key,\n            path: t.path\n          });\n        },\n        set: function set(t) {\n          var e = t.key,\n              r = t.value,\n              n = h({\n            key: e,\n            path: t.path\n          });\n          return console.log(n), a.writeFileSync(n, r), !0;\n        },\n        remove: function remove(t) {\n          var e = h({\n            key: t.key,\n            path: t.path\n          });\n          if (a.existsSync(e)) try {\n            return a.rmSync(v(e)), !0;\n          } catch (t) {\n            return !1;\n          }\n          return !1;\n        },\n        all: function all(t) {\n          var e = (void 0 === t ? {} : t).path;\n          return this.keys({\n            path: e\n          }).map(function (t) {\n            return l({\n              key: t,\n              check: !1,\n              filePath: s(t, e)\n            });\n          });\n        },\n        clear: function clear(t) {\n          var e = h({\n            key: \"\",\n            path: (void 0 === t ? {} : t).path\n          });\n          if (a.existsSync(e)) try {\n            return console.log(e), function t(e) {\n              for (var r = a.readdirSync(e), n = 0, o = r.length; n < o; n++) {\n                var i = r[n],\n                    u = i.lastIndexOf(\".json\"),\n                    c = e + \"/\" + i;\n                -1 !== u ? a.rmSync(v(c)) : (t(c), a.rmdirSync(v(c)));\n              }\n            }(e), !0;\n          } catch (t) {\n            return console.log(t), !1;\n          }\n          return console.log(e), !1;\n        }\n      };\n\n      function s(t, e) {\n        return void 0 === e && (e = \"\"), i.resolve(c, \".\" + u + e + t + \".json\");\n      }\n\n      function l(t) {\n        var e = t.key,\n            r = t.path,\n            n = t.check,\n            i = void 0 === n || n,\n            u = t.filePath;\n        return u = u || h({\n          key: e,\n          path: r\n        }), !i || a.existsSync(u) ? a.readFileSync(u, \"utf-8\") : o.a;\n      }\n\n      function y(t, e, r) {\n        for (var n = a.readdirSync(e), o = 0, u = n.length; o < u; o++) {\n          var c = n[o],\n              f = c.lastIndexOf(\".json\");\n          -1 !== f ? r.push(t + \"/\" + c.substring(0, f)) : y(t + \"/\" + c, i.resolve(e, c), r);\n        }\n\n        return r;\n      }\n\n      function h(t) {\n        var e = t.key,\n            r = t.path,\n            n = void 0 === r ? \"\" : r;\n        if (n) for (var o = n.split(\"/\"), f = \"\", p = 0; p < o.length; p++) {\n          if (o[p]) {\n            f += \"/\" + o[p];\n            var s = i.resolve(c, \".\" + u + f);\n            a.existsSync(s) || a.mkdirSync(s);\n          }\n        }\n        return e && (e = \"/\" + e + \".json\"), i.resolve(c, \".\" + u + n + e);\n      }\n\n      function v(t) {\n        if (-1 === t.indexOf(u)) throw new Error(\"Invaild Removed FilePath:\" + t);\n        return t;\n      }\n    }).call(this, r(4));\n  }, function (t, e, r) {\n    \"use strict\";\n\n    r.d(e, \"a\", function () {\n      return n;\n    });\n    var n = Symbol(\"storage-empty\");\n  }, function (t, e) {\n    var r,\n        n,\n        o = t.exports = {};\n\n    function a() {\n      throw new Error(\"setTimeout has not been defined\");\n    }\n\n    function i() {\n      throw new Error(\"clearTimeout has not been defined\");\n    }\n\n    function u(t) {\n      if (r === setTimeout) return setTimeout(t, 0);\n      if ((r === a || !r) && setTimeout) return r = setTimeout, setTimeout(t, 0);\n\n      try {\n        return r(t, 0);\n      } catch (e) {\n        try {\n          return r.call(null, t, 0);\n        } catch (e) {\n          return r.call(this, t, 0);\n        }\n      }\n    }\n\n    !function () {\n      try {\n        r = \"function\" == typeof setTimeout ? setTimeout : a;\n      } catch (t) {\n        r = a;\n      }\n\n      try {\n        n = \"function\" == typeof clearTimeout ? clearTimeout : i;\n      } catch (t) {\n        n = i;\n      }\n    }();\n    var c,\n        f = [],\n        p = !1,\n        s = -1;\n\n    function l() {\n      p && c && (p = !1, c.length ? f = c.concat(f) : s = -1, f.length && y());\n    }\n\n    function y() {\n      if (!p) {\n        var t = u(l);\n        p = !0;\n\n        for (var e = f.length; e;) {\n          for (c = f, f = []; ++s < e;) {\n            c && c[s].run();\n          }\n\n          s = -1, e = f.length;\n        }\n\n        c = null, p = !1, function (t) {\n          if (n === clearTimeout) return clearTimeout(t);\n          if ((n === i || !n) && clearTimeout) return n = clearTimeout, clearTimeout(t);\n\n          try {\n            n(t);\n          } catch (e) {\n            try {\n              return n.call(null, t);\n            } catch (e) {\n              return n.call(this, t);\n            }\n          }\n        }(t);\n      }\n    }\n\n    function h(t, e) {\n      this.fun = t, this.array = e;\n    }\n\n    function v() {}\n\n    o.nextTick = function (t) {\n      var e = new Array(arguments.length - 1);\n      if (arguments.length > 1) for (var r = 1; r < arguments.length; r++) {\n        e[r - 1] = arguments[r];\n      }\n      f.push(new h(t, e)), 1 !== f.length || p || u(y);\n    }, h.prototype.run = function () {\n      this.fun.apply(null, this.array);\n    }, o.title = \"browser\", o.browser = !0, o.env = {}, o.argv = [], o.version = \"\", o.versions = {}, o.on = v, o.addListener = v, o.once = v, o.off = v, o.removeListener = v, o.removeAllListeners = v, o.emit = v, o.prependListener = v, o.prependOnceListener = v, o.listeners = function (t) {\n      return [];\n    }, o.binding = function (t) {\n      throw new Error(\"process.binding is not supported\");\n    }, o.cwd = function () {\n      return \"/\";\n    }, o.chdir = function (t) {\n      throw new Error(\"process.chdir is not supported\");\n    }, o.umask = function () {\n      return 0;\n    };\n  }, function (t, e) {\n    t.exports = __webpack_require__(/*! fs */ 0);\n  }, function (t, e) {\n    t.exports = __webpack_require__(/*! path */ 1);\n  }, function (t, e, r) {\n    \"use strict\";\n\n    r.r(e);\n    var n = r(0),\n        o = {\n      length: function length(t) {\n        var e = (void 0 === t ? {} : t).path;\n        return this.keys({\n          path: e\n        }).length;\n      },\n      keys: function keys(t) {\n        var e = (void 0 === t ? {} : t).path,\n            r = wx.getStorageInfoSync().keys;\n        return e ? Object(n.c)(r.filter(function (t) {\n          return 0 === t.indexOf(e);\n        })) : Object(n.c)(r);\n      },\n      get: function get(t) {\n        var e = t.key,\n            r = t.path;\n        return e = Object(n.a)({\n          key: e,\n          path: r\n        }), wx.getStorageSync(e);\n      },\n      set: function set(t) {\n        var e = t.key,\n            r = t.value,\n            o = t.path;\n\n        try {\n          return e = Object(n.a)({\n            key: e,\n            path: o\n          }), wx.setStorageSync(e, r), !0;\n        } catch (t) {\n          return !1;\n        }\n      },\n      remove: function remove(t) {\n        var e = t.key,\n            r = t.path;\n\n        try {\n          return e = Object(n.a)({\n            key: e,\n            path: r\n          }), wx.removeStorageSync(e), !0;\n        } catch (t) {\n          return !1;\n        }\n      },\n      clear: function clear(t) {\n        var e = (void 0 === t ? {} : t).path;\n\n        try {\n          if (e) for (var r = this.keys({\n            path: e\n          }), n = 0, o = r.length; n < o; n++) {\n            this.remove({\n              key: r[n]\n            });\n          } else wx.clearStorageSync();\n          return !0;\n        } catch (t) {\n          return !1;\n        }\n      },\n      all: function all(t) {\n        for (var e = (void 0 === t ? {} : t).path, r = {}, n = this.keys({\n          path: e\n        }), o = 0, a = n.length; o < a; o++) {\n          var i = n[o];\n          r[i] = this.get({\n            key: i\n          });\n        }\n\n        return r;\n      },\n      exist: function exist(t) {\n        var e = t.key,\n            r = t.path;\n        return -1 !== this.keys({\n          path: r\n        }).indexOf(e);\n      }\n    },\n        a = r(1),\n        i = \"local\";\n\n    function u() {\n      return i;\n    }\n\n    var c = {\n      date: Date,\n      reg: RegExp\n    };\n\n    function f(t) {\n      var e = _typeof(t);\n\n      if (\"object\" === e) {\n        var r = function (t) {\n          if (!t) return \"null\";\n\n          for (var e in c) {\n            var r = e,\n                o = c[r];\n            if (!Object(n.e)(o) && t instanceof o) return r;\n          }\n\n          return \"\";\n        }(t);\n\n        if (r) return r;\n      }\n\n      return e;\n    }\n\n    \"web\" === a.a && (c.html = HTMLElement);\n    var p = {\n      length: function length(t) {\n        var e = void 0 === t ? {} : t,\n            r = e.type,\n            n = e.path,\n            o = s(r);\n        return n ? Object.keys(o).filter(function (t) {\n          return 0 === t.indexOf(n);\n        }).length : o.length;\n      },\n      keys: function keys(t) {\n        var e = void 0 === t ? {} : t,\n            r = e.type,\n            o = e.path,\n            a = Object.keys(s(r));\n        return o ? Object(n.c)(a.filter(function (t) {\n          return 0 === t.indexOf(o);\n        })) : Object(n.c)(a);\n      },\n      get: function get(t) {\n        var e = t.key,\n            r = t.type,\n            o = t.path;\n        return e = Object(n.a)({\n          key: e,\n          path: o\n        }), s(r).getItem(e);\n      },\n      set: function set(t) {\n        var e = t.key,\n            r = t.value,\n            o = t.type,\n            a = t.path;\n\n        try {\n          return e = Object(n.a)({\n            key: e,\n            path: a\n          }), s(o).setItem(e, r), !0;\n        } catch (t) {\n          return !1;\n        }\n      },\n      remove: function remove(t) {\n        var e = t.key,\n            r = t.type,\n            o = t.path;\n\n        try {\n          return e = Object(n.a)({\n            key: e,\n            path: o\n          }), s(r).removeItem(e), !0;\n        } catch (t) {\n          return !1;\n        }\n      },\n      clear: function clear(t) {\n        var e = void 0 === t ? {} : t,\n            r = e.type,\n            n = e.path;\n\n        try {\n          if (n) for (var o = this.keys({\n            path: n,\n            type: r\n          }), a = 0, i = o.length; a < i; a++) {\n            this.remove({\n              key: o[a],\n              type: r\n            });\n          } else s(r).clear();\n          return !0;\n        } catch (t) {\n          return !1;\n        }\n      },\n      all: function all(t) {\n        for (var e = void 0 === t ? {} : t, r = e.type, n = e.path, o = {}, a = s(r), i = this.keys({\n          type: r,\n          path: n\n        }), u = 0, c = i.length; u < c; u++) {\n          var f = i[u];\n          o[f] = a.getItem(f);\n        }\n\n        return o;\n      },\n      exist: function exist(t) {\n        var e = t.key,\n            r = t.type,\n            o = t.path;\n        return e = Object(n.a)({\n          key: e,\n          path: o\n        }), s(r).hasOwnProperty(e);\n      }\n    };\n\n    function s(t) {\n      return void 0 === t && (t = u()), \"local\" === t ? window.localStorage : window.sessionStorage;\n    }\n\n    var l = r(2),\n        y = {\n      function: {\n        set: function set(t) {\n          return \"return \" + t.toString() + \";\";\n        },\n        get: function get(t) {\n          return new Function(t)();\n        }\n      },\n      reg: {\n        set: function set(t) {\n          return t.toString();\n        },\n        get: function get(t) {\n          return new RegExp(t);\n        }\n      },\n      html: {\n        set: function set(t) {\n          return t.outerHTML;\n        },\n        get: function get(t) {\n          var e = document.createElement(\"div\");\n          return e.innerHTML = t, e.children[0];\n        }\n      },\n      date: {\n        set: function set(t) {\n          return t.getTime();\n        },\n        get: function get(t) {\n          return new Date(t);\n        }\n      }\n    };\n\n    function h(t) {\n      var e = t.type,\n          r = t.data,\n          n = t.oprate,\n          o = y[e];\n      return o ? o[n](r) : r;\n    }\n\n    function v(t) {\n      var e = t.data,\n          r = t.storageType;\n      return \"temp\" === (void 0 === r ? \"local\" : r) ? e.value : h({\n        type: e.type,\n        data: e.value,\n        oprate: \"get\"\n      });\n    }\n\n    var d = {};\n\n    function g(t, e) {\n      if (void 0 === t && (t = \"\"), void 0 === e && (e = \"get\"), !t || \"/\" === t) {\n        if (\"get\" === e || \"set\" === e) return d;\n        if (\"clear\" === e) return d = {}, !0;\n      }\n\n      for (var r = t.split(\"/\"), n = d, o = 0, a = r.length; o < a; o++) {\n        var i = r[o];\n\n        if (i) {\n          if (!n[i]) if (\"set\" === e) n[i] = {};else {\n            if (\"get\" === e) return n;\n            if (\"clear\" === e) return !1;\n          }\n          if (\"clear\" === e && o === a - 1) return delete n[i], !0;\n          n = n[i];\n        }\n      }\n\n      return n;\n    }\n\n    var k = {\n      length: function length(t) {\n        var e = (void 0 === t ? {} : t).path;\n        return this.keys({\n          path: e\n        }).length;\n      },\n      keys: function keys(t) {\n        var e = (void 0 === t ? {} : t).path;\n        return Object.keys(g(e));\n      },\n      exist: function exist(t) {\n        var e = t.key;\n        return g(t.path).hasOwnProperty(e);\n      },\n      get: function get(t) {\n        var e = t.key,\n            r = t.path;\n        return this.exist({\n          key: e\n        }) ? Object(n.b)(g(r)[e]) : null;\n      },\n      set: function set(t) {\n        var e = t.key,\n            r = t.value;\n        return g(t.path, \"set\")[e] = Object(n.b)(r), !0;\n      },\n      remove: function remove(t) {\n        var e = t.key;\n        return delete g(t.path)[e], !0;\n      },\n      all: function all(t) {\n        var e = (void 0 === t ? {} : t).path;\n        return Object(n.b)(g(e));\n      },\n      clear: function clear(t) {\n        return g((void 0 === t ? {} : t).path, \"clear\");\n      }\n    },\n        m = r(3),\n        b = {\n      web: p,\n      miniapp: o,\n      node: l.a\n    }[a.a];\n\n    function w(t) {\n      return void 0 === t && (t = u()), \"temp\" === t || \"web\" !== a.a && \"local\" !== t ? k : b;\n    }\n\n    var x = {\n      env: a.a,\n      type: function type(t) {\n        if (!t) return u();\n        !function (t) {\n          i = t;\n        }(t);\n      },\n      length: function length(t) {\n        var e = void 0 === t ? {} : t,\n            r = e.type,\n            n = e.path;\n        return w(r).length({\n          type: r,\n          path: n\n        });\n      },\n      clear: function clear(t) {\n        var e = void 0 === t ? {} : t,\n            r = e.type,\n            n = e.path;\n        return w(r).clear({\n          type: r,\n          path: n\n        });\n      },\n      keys: function keys(t) {\n        var e = void 0 === t ? {} : t,\n            r = e.type,\n            n = e.path;\n        return w(r).keys({\n          type: r,\n          path: n\n        });\n      },\n      remove: function remove(t) {\n        var e = t.key,\n            r = t.type,\n            n = t.path;\n        return \"\" === e || w(r).remove({\n          key: e,\n          type: r,\n          path: n\n        });\n      },\n      exist: function exist(t) {\n        var e = t.key,\n            r = t.type,\n            n = t.path;\n        return \"\" !== e && w(r).exist({\n          key: e,\n          type: r,\n          path: n\n        });\n      },\n      get: function get(t) {\n        var e = t.key,\n            r = t.type,\n            o = t.path;\n        if (\"\" === e) return m.a;\n        var i = w(r).get({\n          key: e,\n          type: r,\n          path: o\n        });\n        if (\"temp\" === r || \"miniapp\" === a.a) return v({\n          storageType: r,\n          data: i\n        });\n        var u = Object(n.g)(i);\n        return u ? v({\n          storageType: r,\n          data: u\n        }) : i;\n      },\n      set: function set(t) {\n        var e = t.key,\n            r = t.value,\n            n = t.path,\n            o = t.type,\n            i = void 0 === o ? \"local\" : o;\n        if (\"\" === e) return !1;\n\n        var u = function (t) {\n          var e = t.data,\n              r = t.storageType,\n              n = void 0 === r ? \"local\" : r,\n              o = f(e);\n          return {\n            type: o,\n            value: \"temp\" === n ? e : h({\n              type: o,\n              data: e,\n              oprate: \"set\"\n            })\n          };\n        }({\n          data: r,\n          storageType: i\n        }),\n            c = w(i);\n\n        return \"temp\" === i || \"miniapp\" === a.a ? c.set({\n          key: e,\n          value: u,\n          path: n,\n          type: i\n        }) : c.set({\n          key: e,\n          value: JSON.stringify(u),\n          path: n,\n          type: i\n        });\n      },\n      all: function all(t) {\n        for (var e = void 0 === t ? {} : t, r = e.type, n = e.path, o = this.keys({\n          type: r,\n          path: n\n        }), a = {}, i = 0, u = o.length; i < u; i++) {\n          var c = o[i];\n          a[c] = this.get({\n            key: c,\n            type: r,\n            path: n\n          });\n        }\n\n        return a;\n      }\n    };\n    e.default = x;\n  }]).default;\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/node-dev.min.js\n");

/***/ }),

/***/ "./test/cases/set-get.js":
/*!*******************************!*\
  !*** ./test/cases/set-get.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  name: '测试times参数',\n  test: function test(_ref) {\n    var storage = _ref.storage;\n    storage.set({\n      key: 'aaa',\n      value: {\n        a: 1\n      }\n    });\n    return storage.get({\n      key: 'aaa'\n    });\n  },\n  expect: {\n    a: 1\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L2Nhc2VzL3NldC1nZXQuanM/MTdlYiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibmFtZSIsInRlc3QiLCJzdG9yYWdlIiwic2V0Iiwia2V5IiwidmFsdWUiLCJhIiwiZ2V0IiwiZXhwZWN0Il0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLE1BQUksRUFBRSxXQURPO0FBRWJDLE1BRmEsc0JBRUk7QUFBQSxRQUFWQyxPQUFVLFFBQVZBLE9BQVU7QUFDYkEsV0FBTyxDQUFDQyxHQUFSLENBQVk7QUFBQ0MsU0FBRyxFQUFFLEtBQU47QUFBYUMsV0FBSyxFQUFFO0FBQUNDLFNBQUMsRUFBRTtBQUFKO0FBQXBCLEtBQVo7QUFDQSxXQUFPSixPQUFPLENBQUNLLEdBQVIsQ0FBWTtBQUFDSCxTQUFHLEVBQUU7QUFBTixLQUFaLENBQVA7QUFDSCxHQUxZO0FBTWJJLFFBQU0sRUFBRTtBQUFDRixLQUFDLEVBQUU7QUFBSjtBQU5LLENBQWpCIiwiZmlsZSI6Ii4vdGVzdC9jYXNlcy9zZXQtZ2V0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgbmFtZTogJ+a1i+ivlXRpbWVz5Y+C5pWwJyxcbiAgICB0ZXN0ICh7c3RvcmFnZX0pIHtcbiAgICAgICAgc3RvcmFnZS5zZXQoe2tleTogJ2FhYScsIHZhbHVlOiB7YTogMX19KTtcbiAgICAgICAgcmV0dXJuIHN0b3JhZ2UuZ2V0KHtrZXk6ICdhYWEnfSk7XG4gICAgfSxcbiAgICBleHBlY3Q6IHthOiAxfSxcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./test/cases/set-get.js\n");

/***/ }),

/***/ "./test/lib.js":
/*!*********************!*\
  !*** ./test/lib.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function promise(fn) {\n  return new Promise(function (res) {\n    fn(res);\n  });\n}\n\nfunction delay() {\n  var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n  return promise(function (resolve) {\n    setTimeout(resolve, time);\n  });\n}\n\nfunction registInterceptor(_ref) {\n  var event = _ref.event,\n      eventName = _ref.eventName,\n      done = _ref.done;\n  var total = 0;\n  var index = 0;\n  event.onRegist(function (option) {\n    if (option.eventName === eventName) {\n      total++;\n    }\n  });\n  event.onEmit(function (option) {\n    if (option.eventName === eventName) {\n      index++;\n\n      if (index === total) {\n        done();\n      }\n    }\n  });\n}\n\nmodule.exports = {\n  delay: delay,\n  registInterceptor: registInterceptor,\n  promise: promise\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L2xpYi5qcz81MTI5Il0sIm5hbWVzIjpbInByb21pc2UiLCJmbiIsIlByb21pc2UiLCJyZXMiLCJkZWxheSIsInRpbWUiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsInJlZ2lzdEludGVyY2VwdG9yIiwiZXZlbnQiLCJldmVudE5hbWUiLCJkb25lIiwidG90YWwiLCJpbmRleCIsIm9uUmVnaXN0Iiwib3B0aW9uIiwib25FbWl0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQ0EsU0FBU0EsT0FBVCxDQUFrQkMsRUFBbEIsRUFBc0I7QUFDbEIsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQUMsR0FBRyxFQUFJO0FBQ3RCRixNQUFFLENBQUNFLEdBQUQsQ0FBRjtBQUNILEdBRk0sQ0FBUDtBQUdIOztBQUVELFNBQVNDLEtBQVQsR0FBMkI7QUFBQSxNQUFYQyxJQUFXLHVFQUFKLEVBQUk7QUFDdkIsU0FBT0wsT0FBTyxDQUFDLFVBQUNNLE9BQUQsRUFBYTtBQUN4QkMsY0FBVSxDQUFDRCxPQUFELEVBQVVELElBQVYsQ0FBVjtBQUNILEdBRmEsQ0FBZDtBQUdIOztBQUVELFNBQVNHLGlCQUFULE9BQXNEO0FBQUEsTUFBekJDLEtBQXlCLFFBQXpCQSxLQUF5QjtBQUFBLE1BQWxCQyxTQUFrQixRQUFsQkEsU0FBa0I7QUFBQSxNQUFQQyxJQUFPLFFBQVBBLElBQU87QUFDbEQsTUFBSUMsS0FBSyxHQUFHLENBQVo7QUFDQSxNQUFJQyxLQUFLLEdBQUcsQ0FBWjtBQUNBSixPQUFLLENBQUNLLFFBQU4sQ0FBZSxVQUFDQyxNQUFELEVBQVk7QUFDdkIsUUFBSUEsTUFBTSxDQUFDTCxTQUFQLEtBQXFCQSxTQUF6QixFQUFvQztBQUNoQ0UsV0FBSztBQUNSO0FBQ0osR0FKRDtBQUtBSCxPQUFLLENBQUNPLE1BQU4sQ0FBYSxVQUFDRCxNQUFELEVBQVk7QUFDckIsUUFBSUEsTUFBTSxDQUFDTCxTQUFQLEtBQXFCQSxTQUF6QixFQUFvQztBQUNoQ0csV0FBSzs7QUFDTCxVQUFJQSxLQUFLLEtBQUtELEtBQWQsRUFBcUI7QUFDakJELFlBQUk7QUFDUDtBQUNKO0FBQ0osR0FQRDtBQVFIOztBQUVETSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYmQsT0FBSyxFQUFMQSxLQURhO0FBQ05JLG1CQUFpQixFQUFqQkEsaUJBRE07QUFDYVIsU0FBTyxFQUFQQTtBQURiLENBQWpCIiwiZmlsZSI6Ii4vdGVzdC9saWIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmZ1bmN0aW9uIHByb21pc2UgKGZuKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlcyA9PiB7XG4gICAgICAgIGZuKHJlcyk7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGRlbGF5ICh0aW1lID0gNTApIHtcbiAgICByZXR1cm4gcHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KHJlc29sdmUsIHRpbWUpO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiByZWdpc3RJbnRlcmNlcHRvciAoe2V2ZW50LCBldmVudE5hbWUsIGRvbmV9KSB7XG4gICAgbGV0IHRvdGFsID0gMDtcbiAgICBsZXQgaW5kZXggPSAwO1xuICAgIGV2ZW50Lm9uUmVnaXN0KChvcHRpb24pID0+IHtcbiAgICAgICAgaWYgKG9wdGlvbi5ldmVudE5hbWUgPT09IGV2ZW50TmFtZSkge1xuICAgICAgICAgICAgdG90YWwgKys7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBldmVudC5vbkVtaXQoKG9wdGlvbikgPT4ge1xuICAgICAgICBpZiAob3B0aW9uLmV2ZW50TmFtZSA9PT0gZXZlbnROYW1lKSB7XG4gICAgICAgICAgICBpbmRleCArKztcbiAgICAgICAgICAgIGlmIChpbmRleCA9PT0gdG90YWwpIHtcbiAgICAgICAgICAgICAgICBkb25lKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZGVsYXksIHJlZ2lzdEludGVyY2VwdG9yLCBwcm9taXNlXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./test/lib.js\n");

/***/ }),

/***/ "./test/test-web.js":
/*!**************************!*\
  !*** ./test/test-web.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var start = __webpack_require__(/*! ./test */ \"./test/test.js\");\n\nvar cases = [__webpack_require__(/*! ./cases/set-get */ \"./test/cases/set-get.js\")];\nstart({\n  cases: cases\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L3Rlc3Qtd2ViLmpzPzZiMTkiXSwibmFtZXMiOlsic3RhcnQiLCJyZXF1aXJlIiwiY2FzZXMiXSwibWFwcGluZ3MiOiJBQUFBLElBQU1BLEtBQUssR0FBR0MsbUJBQU8sQ0FBQyw4QkFBRCxDQUFyQjs7QUFFQSxJQUFNQyxLQUFLLEdBQUcsQ0FDVkQsbUJBQU8sQ0FBQyxnREFBRCxDQURHLENBQWQ7QUFJQUQsS0FBSyxDQUFDO0FBQ0ZFLE9BQUssRUFBTEE7QUFERSxDQUFELENBQUwiLCJmaWxlIjoiLi90ZXN0L3Rlc3Qtd2ViLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc3RhcnQgPSByZXF1aXJlKCcuL3Rlc3QnKTtcblxuY29uc3QgY2FzZXMgPSBbXG4gICAgcmVxdWlyZSgnLi9jYXNlcy9zZXQtZ2V0Jylcbl07XG5cbnN0YXJ0KHtcbiAgICBjYXNlcyxcbn0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./test/test-web.js\n");

/***/ }),

/***/ "./test/test.js":
/*!**********************!*\
  !*** ./test/test.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _require = __webpack_require__(/*! easy-test-lib */ \"./node_modules/easy-test-lib/easy-test-lib.min.js\"),\n    startTest = _require.startTest;\n\nvar lib = __webpack_require__(/*! ./lib */ \"./test/lib.js\");\n\nvar storage = __webpack_require__(/*! ../public/node-dev.min */ \"./public/node-dev.min.js\");\n\nmodule.exports = function (_ref) {\n  var cases = _ref.cases,\n      onComplete = _ref.onComplete;\n  startTest({\n    args: {\n      storage: storage,\n      lib: lib\n    },\n    cases: cases,\n    onTestComplete: function onTestComplete(result) {\n      // 测试全部完成回调 可选\n      var txtContent = '';\n\n      var log = function log() {\n        var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        console.log(text);\n        txtContent += text + '\\n';\n      };\n\n      log();\n      log(\"\\u6D4B\\u8BD5\\u7ED3\\u679C: \".concat(result.passed ? '' : '不', \"\\u901A\\u8FC7\"));\n      log(\"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u6570: \".concat(result.results.length));\n      log(\"\\u603B\\u8017\\u65F6: \".concat(result.time, \"ms\"));\n      log('----------------------------');\n      log(\"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u8BE6\\u7EC6\\u6570\\u636E:\");\n      log('----------------------------');\n      result.results.forEach(function (item) {\n        log(\"\\u3010\".concat(item.name, \"\\u3011: \").concat(item.passed ? '' : '不', \"\\u901A\\u8FC7 / \").concat(item.time, \"ms\"));\n        log(\"\\u8F93\\u51FA\\u7ED3\\u679C: \".concat(JSON.stringify(item.result)));\n\n        if (!item.passed) {\n          log(\"\\u671F\\u671B\\u7ED3\\u679C: \".concat(JSON.stringify(item.expect)));\n        }\n\n        log();\n      });\n      console.log(\"\\u6D4B\\u8BD5\\u7ED3\\u679C: \".concat(result.passed ? '' : '不', \"\\u901A\\u8FC7\"));\n      console.log(\"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u6570: \".concat(result.results.length));\n      console.log(\"\\u603B\\u8017\\u65F6: \".concat(result.time, \"ms\"));\n      log();\n      if (onComplete) onComplete(result, txtContent);\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L3Rlc3QuanM/MzdhYyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwic3RhcnRUZXN0IiwibGliIiwic3RvcmFnZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJjYXNlcyIsIm9uQ29tcGxldGUiLCJhcmdzIiwib25UZXN0Q29tcGxldGUiLCJyZXN1bHQiLCJ0eHRDb250ZW50IiwibG9nIiwidGV4dCIsImNvbnNvbGUiLCJwYXNzZWQiLCJyZXN1bHRzIiwibGVuZ3RoIiwidGltZSIsImZvckVhY2giLCJpdGVtIiwibmFtZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJleHBlY3QiXSwibWFwcGluZ3MiOiJBQUFBLGVBQW9CQSxtQkFBTyxDQUFDLHdFQUFELENBQTNCO0FBQUEsSUFBT0MsU0FBUCxZQUFPQSxTQUFQOztBQUNBLElBQU1DLEdBQUcsR0FBR0YsbUJBQU8sQ0FBQyw0QkFBRCxDQUFuQjs7QUFDQSxJQUFNRyxPQUFPLEdBQUdILG1CQUFPLENBQUMsd0RBQUQsQ0FBdkI7O0FBRUFJLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixnQkFBeUI7QUFBQSxNQUF2QkMsS0FBdUIsUUFBdkJBLEtBQXVCO0FBQUEsTUFBaEJDLFVBQWdCLFFBQWhCQSxVQUFnQjtBQUN0Q04sV0FBUyxDQUFDO0FBQ05PLFFBQUksRUFBRTtBQUFDTCxhQUFPLEVBQVBBLE9BQUQ7QUFBVUQsU0FBRyxFQUFIQTtBQUFWLEtBREE7QUFFTkksU0FBSyxFQUFMQSxLQUZNO0FBR05HLGtCQUhNLDBCQUdVQyxNQUhWLEVBR2tCO0FBQUU7QUFDdEIsVUFBSUMsVUFBVSxHQUFHLEVBQWpCOztBQUNBLFVBQU1DLEdBQUcsR0FBRyxTQUFOQSxHQUFNLEdBQWU7QUFBQSxZQUFkQyxJQUFjLHVFQUFQLEVBQU87QUFDdkJDLGVBQU8sQ0FBQ0YsR0FBUixDQUFZQyxJQUFaO0FBQ0FGLGtCQUFVLElBQUlFLElBQUksR0FBRyxJQUFyQjtBQUNILE9BSEQ7O0FBSUFELFNBQUc7QUFDSEEsU0FBRyxxQ0FBVUYsTUFBTSxDQUFDSyxNQUFQLEdBQWdCLEVBQWhCLEdBQXFCLEdBQS9CLGtCQUFIO0FBRUFILFNBQUcsMkNBQVdGLE1BQU0sQ0FBQ00sT0FBUCxDQUFlQyxNQUExQixFQUFIO0FBQ0FMLFNBQUcsK0JBQVNGLE1BQU0sQ0FBQ1EsSUFBaEIsUUFBSDtBQUNBTixTQUFHLENBQUMsOEJBQUQsQ0FBSDtBQUNBQSxTQUFHLHFEQUFIO0FBQ0FBLFNBQUcsQ0FBQyw4QkFBRCxDQUFIO0FBQ0FGLFlBQU0sQ0FBQ00sT0FBUCxDQUFlRyxPQUFmLENBQXVCLFVBQUFDLElBQUksRUFBSTtBQUMzQlIsV0FBRyxpQkFBS1EsSUFBSSxDQUFDQyxJQUFWLHFCQUFvQkQsSUFBSSxDQUFDTCxNQUFMLEdBQWMsRUFBZCxHQUFtQixHQUF2Qyw0QkFBa0RLLElBQUksQ0FBQ0YsSUFBdkQsUUFBSDtBQUNBTixXQUFHLHFDQUFVVSxJQUFJLENBQUNDLFNBQUwsQ0FBZUgsSUFBSSxDQUFDVixNQUFwQixDQUFWLEVBQUg7O0FBQ0EsWUFBSSxDQUFDVSxJQUFJLENBQUNMLE1BQVYsRUFBa0I7QUFDZEgsYUFBRyxxQ0FBVVUsSUFBSSxDQUFDQyxTQUFMLENBQWVILElBQUksQ0FBQ0ksTUFBcEIsQ0FBVixFQUFIO0FBQ0g7O0FBQ0RaLFdBQUc7QUFDTixPQVBEO0FBU0FFLGFBQU8sQ0FBQ0YsR0FBUixxQ0FBcUJGLE1BQU0sQ0FBQ0ssTUFBUCxHQUFnQixFQUFoQixHQUFxQixHQUExQztBQUNBRCxhQUFPLENBQUNGLEdBQVIsMkNBQXNCRixNQUFNLENBQUNNLE9BQVAsQ0FBZUMsTUFBckM7QUFDQUgsYUFBTyxDQUFDRixHQUFSLCtCQUFvQkYsTUFBTSxDQUFDUSxJQUEzQjtBQUNBTixTQUFHO0FBQ0gsVUFBSUwsVUFBSixFQUNJQSxVQUFVLENBQUNHLE1BQUQsRUFBU0MsVUFBVCxDQUFWO0FBQ1A7QUFoQ0ssR0FBRCxDQUFUO0FBa0NILENBbkNEIiwiZmlsZSI6Ii4vdGVzdC90ZXN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge3N0YXJ0VGVzdH0gPSByZXF1aXJlKCdlYXN5LXRlc3QtbGliJyk7XG5jb25zdCBsaWIgPSByZXF1aXJlKCcuL2xpYicpO1xuY29uc3Qgc3RvcmFnZSA9IHJlcXVpcmUoJy4uL3B1YmxpYy9ub2RlLWRldi5taW4nKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoe2Nhc2VzLCBvbkNvbXBsZXRlfSkgPT4ge1xuICAgIHN0YXJ0VGVzdCh7XG4gICAgICAgIGFyZ3M6IHtzdG9yYWdlLCBsaWJ9LFxuICAgICAgICBjYXNlcyxcbiAgICAgICAgb25UZXN0Q29tcGxldGUgKHJlc3VsdCkgeyAvLyDmtYvor5Xlhajpg6jlrozmiJDlm57osIMg5Y+v6YCJXG4gICAgICAgICAgICBsZXQgdHh0Q29udGVudCA9ICcnO1xuICAgICAgICAgICAgY29uc3QgbG9nID0gKHRleHQgPSAnJykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRleHQpO1xuICAgICAgICAgICAgICAgIHR4dENvbnRlbnQgKz0gdGV4dCArICdcXG4nO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGxvZygpO1xuICAgICAgICAgICAgbG9nKGDmtYvor5Xnu5Pmnpw6ICR7cmVzdWx0LnBhc3NlZCA/ICcnIDogJ+S4jSd96YCa6L+HYCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxvZyhg5rWL6K+V55So5L6L5pWwOiAke3Jlc3VsdC5yZXN1bHRzLmxlbmd0aH1gKTtcbiAgICAgICAgICAgIGxvZyhg5oC76ICX5pe2OiAke3Jlc3VsdC50aW1lfW1zYCk7XG4gICAgICAgICAgICBsb2coJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nKTtcbiAgICAgICAgICAgIGxvZyhg5rWL6K+V55So5L6L6K+m57uG5pWw5o2uOmApO1xuICAgICAgICAgICAgbG9nKCctLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7XG4gICAgICAgICAgICByZXN1bHQucmVzdWx0cy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgIGxvZyhg44CQJHtpdGVtLm5hbWV944CROiAke2l0ZW0ucGFzc2VkID8gJycgOiAn5LiNJ33pgJrov4cgLyAke2l0ZW0udGltZX1tc2ApO1xuICAgICAgICAgICAgICAgIGxvZyhg6L6T5Ye657uT5p6cOiAke0pTT04uc3RyaW5naWZ5KGl0ZW0ucmVzdWx0KX1gKTtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW0ucGFzc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZyhg5pyf5pyb57uT5p6cOiAke0pTT04uc3RyaW5naWZ5KGl0ZW0uZXhwZWN0KX1gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbG9nKCk7XG4gICAgICAgICAgICB9KTtcbiAgICBcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGDmtYvor5Xnu5Pmnpw6ICR7cmVzdWx0LnBhc3NlZCA/ICcnIDogJ+S4jSd96YCa6L+HYCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhg5rWL6K+V55So5L6L5pWwOiAke3Jlc3VsdC5yZXN1bHRzLmxlbmd0aH1gKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGDmgLvogJfml7Y6ICR7cmVzdWx0LnRpbWV9bXNgKTtcbiAgICAgICAgICAgIGxvZygpO1xuICAgICAgICAgICAgaWYgKG9uQ29tcGxldGUpXG4gICAgICAgICAgICAgICAgb25Db21wbGV0ZShyZXN1bHQsIHR4dENvbnRlbnQpO1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./test/test.js\n");

/***/ }),

/***/ 0:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZnMgKGlnbm9yZWQpP2UyNzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n");

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcGF0aCAoaWdub3JlZCk/NTJmYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ })

/******/ });